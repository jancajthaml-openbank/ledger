version: 2.1

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  tag:
    jobs:
      - checkout:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - versions:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - deps:
          requires:
            - checkout
          filters:
            branches:
              only: master
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - unit-test:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - compile-amd64:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - compile-armhf:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - compile-arm64:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - package-debian-amd64:
          requires:
            - compile-amd64
            - versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - package-debian-armhf:
          requires:
            - compile-armhf
            - versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - package-debian-arm64:
          requires:
            - compile-arm64
            - versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - package-docker:
          requires:
            - unit-test
            - package-debian-amd64
            - package-debian-armhf
            - package-debian-arm64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - blackbox-test-amd64:
          requires:
            - package-docker
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - release:
          requires:
            - blackbox-test-amd64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/

  commit:
    jobs:
      - checkout
      - versions
      - deps:
          requires:
            - checkout
      - unit-test:
          requires:
            - deps
      - compile-amd64:
          requires:
            - deps
      - compile-armhf:
          requires:
            - deps
      - compile-arm64:
          requires:
            - deps
      - package-debian-amd64:
          requires:
            - compile-amd64
            - versions
      - package-debian-armhf:
          requires:
            - compile-armhf
            - versions
      - package-debian-arm64:
          requires:
            - compile-arm64
            - versions
      - package-docker:
          requires:
            - unit-test
            - package-debian-amd64
            - package-debian-armhf
            - package-debian-arm64
      - blackbox-test-amd64:
          requires:
            - package-docker

  rolling_contract:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - blackbox-test-amd64

# ---------------------------------------------------------------------------- #

executors:

  git:
    docker:
      - image: docker.io/alpine/git

  go:
    docker:
      - image: docker.io/jancajthaml/go:latest

  debian:
    docker:
      - image: docker.io/jancajthaml/debian-packager:latest

  machine:
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: false

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  checkout:
    executor: git
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - save_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/.git
            - /mnt/ramdisk/dev
            - /mnt/ramdisk/services
            - /mnt/ramdisk/packaging
            - /mnt/ramdisk/Dockerfile

  # -------------------------------------------------------------------------- #

  versions:
    executor: git
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - run:
          name: Update FULL_VERSION + SHORT_VERSION
          command: |
            if [ -z ${CIRCLE_TAG} ] ; then
              tags=$(git tag --sort=-v:refname | head -1)
              if [ -z ${tags} ] ; then
                VERSION=v0.0.0
              else
                VERSION=${tags}
              fi
              META=$(echo -e ${CIRCLE_BRANCH} | sed 's:.*/::')
              echo -e "${VERSION#v}" > /mnt/ramdisk/SHORT_VERSION
              echo -e "${VERSION}-${META}" > /mnt/ramdisk/FULL_VERSION
            else
              echo -e "${CIRCLE_TAG#v}" > /mnt/ramdisk/SHORT_VERSION
              echo -e "${CIRCLE_TAG}" > /mnt/ramdisk/FULL_VERSION
            fi
      - save_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/SHORT_VERSION
            - /mnt/ramdisk/FULL_VERSION

  # -------------------------------------------------------------------------- #

  deps:
    executor: go
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Sync ledger-unit dependencies
          command: |
            /mnt/ramdisk/dev/lifecycle/sync \
              --source /mnt/ramdisk/services/ledger-unit
      - run:
          name: Sync ledger-rest dependencies
          command: |
            /mnt/ramdisk/dev/lifecycle/sync \
              --source /mnt/ramdisk/services/ledger-rest
      - save_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/services/ledger-unit/vendor
            - /mnt/ramdisk/services/ledger-rest/vendor

  # -------------------------------------------------------------------------- #

  unit-test:
    executor: go
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Unit test ledger-unit
          command: |
            /mnt/ramdisk/dev/lifecycle/test \
              --source /mnt/ramdisk/services/ledger-unit \
              --output /mnt/ramdisk/reports
          no_output_timeout: 5m
      - run:
          name: Unit test ledger-rest
          command: |
            /mnt/ramdisk/dev/lifecycle/test \
              --source /mnt/ramdisk/services/ledger-rest \
              --output /mnt/ramdisk/reports
          no_output_timeout: 5m
      - store_test_results:
          path: /mnt/ramdisk/reports/unit-tests

  # -------------------------------------------------------------------------- #

  compile-amd64:
    executor: go
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Compile ledger-unit binary
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/amd64 \
              --source /mnt/ramdisk/services/ledger-unit \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - run:
          name: Compile ledger-rest binary
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/amd64 \
              --source /mnt/ramdisk/services/ledger-rest \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - save_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  compile-armhf:
    executor: go
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Compile ledger-unit binary
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/armhf \
              --source /mnt/ramdisk/services/ledger-unit \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - run:
          name: Compile ledger-rest binary
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/armhf \
              --source /mnt/ramdisk/services/ledger-rest \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - save_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  compile-arm64:
    executor: go
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Compile ledger-unit binary
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/arm64 \
              --source /mnt/ramdisk/services/ledger-unit \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - run:
          name: Compile ledger-rest binary
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/arm64 \
              --source /mnt/ramdisk/services/ledger-rest \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - save_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  package-debian-amd64:
    executor: debian
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /mnt/ramdisk/SHORT_VERSION)
            /mnt/ramdisk/dev/lifecycle/debian \
              --arch amd64 \
              --pkg ledger \
              --version ${VERSION} \
              --source /mnt/ramdisk/packaging
          no_output_timeout: 5m
      - save_cache:
          key: debian-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  package-debian-armhf:
    executor: debian
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /mnt/ramdisk/SHORT_VERSION)
            /mnt/ramdisk/dev/lifecycle/debian \
              --arch armhf \
              --pkg ledger \
              --version ${VERSION} \
              --source /mnt/ramdisk/packaging
          no_output_timeout: 5m
      - save_cache:
          key: debian-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  package-debian-arm64:
    executor: debian
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /mnt/ramdisk/SHORT_VERSION)
            /mnt/ramdisk/dev/lifecycle/debian \
              --arch arm64 \
              --pkg ledger \
              --version ${VERSION} \
              --source /mnt/ramdisk/packaging
          no_output_timeout: 5m
      - save_cache:
          key: debian-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  package-docker:
    docker:
      - image: docker.io/docker:18.06.0-ce-git
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Package for docker
          command: |
            FULL_VERSION=$(cat /mnt/ramdisk/FULL_VERSION)
            SHORT_VERSION=$(cat /mnt/ramdisk/SHORT_VERSION)

            docker build -t docker.io/openbank/ledger:${FULL_VERSION} .
            docker build -t docker.pkg.github.com/jancajthaml-openbank/ledger/ledger:${SHORT_VERSION} .
      - run:
          name: Publish to docker.io
          command: |
            echo ${DOCKER_PASSWORD} \
              | docker login -u ${DOCKER_USER} --password-stdin
            VERSION=$(cat /mnt/ramdisk/FULL_VERSION)
            docker push \
              docker.io/openbank/ledger:${VERSION}
            rm -f /root/.docker/config.json
      - run:
          name: Publish to docker.pkg.github.com
          command: |
            echo ${GITHUB_RELEASE_TOKEN} \
              | docker login docker.pkg.github.com -u jancajthaml --password-stdin
            VERSION=$(cat /mnt/ramdisk/SHORT_VERSION)
            docker push \
              docker.pkg.github.com/jancajthaml-openbank/ledger/ledger:${VERSION}
            rm -f /root/.docker/config.json

  # -------------------------------------------------------------------------- #

  blackbox-test-amd64:
    executor: machine
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run: docker pull docker.io/jancajthaml/bbtest:amd64
      - run:
          name: Update FULL_VERSION + SHORT_VERSION
          command: |
            if [ -z ${CIRCLE_TAG} ] ; then
              tags=$(git tag --sort=-v:refname | head -1)
              if [ -z ${tags} ] ; then
                VERSION=v0.0.0
              else
                VERSION=${tags}
              fi
              META=$(echo -e ${CIRCLE_BRANCH} | sed 's:.*/::')
              echo -e "${VERSION#v}" > /home/circleci/project/SHORT_VERSION
              echo -e "${VERSION}-${META}" > /home/circleci/project/FULL_VERSION
            else
              echo -e "${CIRCLE_TAG#v}" > /home/circleci/project/SHORT_VERSION
              echo -e "${CIRCLE_TAG}" > /home/circleci/project/FULL_VERSION
            fi
      - run:
          name: Run blackbox tests
          command: |
            export IMAGE_VERSION=$(cat /home/circleci/project/FULL_VERSION)
            export UNIT_VERSION=$(cat /home/circleci/project/SHORT_VERSION)

            docker-compose up -d bbtest
            docker exec -t $(docker-compose ps -q bbtest) python3 /opt/app/bbtest/main.py
            docker-compose down -v
          no_output_timeout: 5m
      - store_test_results:
          path: /home/circleci/project/reports/blackbox-tests/junit
      - store_artifacts:
          path: /home/circleci/project/reports/blackbox-tests
          destination: reports

  # -------------------------------------------------------------------------- #

  release:
    executor: debian
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - deploy:
          name: Release artifacts to github
          command: |
            /mnt/ramdisk/dev/lifecycle/release \
              --version ${CIRCLE_TAG} \
              --token ${GITHUB_RELEASE_TOKEN}

# ---------------------------------------------------------------------------- #
