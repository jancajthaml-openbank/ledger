#!/bin/bash

set -eu
trap exit INT TERM

################################################################################

ARCH="amd64"
PLATFORM="linux"
SOURCE=""
OUTPUT=""
while [ $# -gt 0 ] ; do
key="$1"
case $key in
  --arch)   ARCH=${2#*/}; PLATFORM=${2%%/*}; shift; shift; ;;
  --source) SOURCE="$2";                     shift; shift; ;;
  --output) OUTPUT="$2";                     shift; shift; ;;
  *)                                         shift;        ;;
esac
done

################################################################################

if [ -z "${SOURCE}" ] ; then
  (>&2 echo "[error] source package not provided")
  exit 1
fi

if [ -z "${OUTPUT}" ] ; then
  (>&2 echo "[error] output not provided")
  exit 1
fi


OUTPUT_FILE=${OUTPUT}/$(basename ${SOURCE})-${PLATFORM}-${ARCH}

################################################################################

lifecycle::go::build() {
  local dir="$1"
  if [ -z ${dir} -o ! -d ${dir} ] ; then
    return
  fi

  local output="$2"
  if [ -z ${output} ] ; then
    return
  fi

  if [ -f ${output} ] ; then
    rm -f ${output}
  fi

  cd ${dir}

  go clean

  echo "[info] ${output} cleaned"

  case ${ARCH} in

    armhf)
      GOOS=${PLATFORM} \
      GOARM=7 \
      GOARCH=arm \
      CGO_ENABLED=1 \
      GOFLAGS=-buildmode=pie \
      CC=arm-linux-gnueabihf-gcc \
      \
      go build -a -o ${output} || {
        (>&2 echo "[error] ${output} unable to build")
        exit 1
      }
    ;;

    arm64)
      GOOS=${PLATFORM} \
      GOARCH=arm64 \
      CGO_ENABLED=1 \
      GOFLAGS=-buildmode=pie \
      CC=aarch64-linux-gnu-gcc \
      \
      go build -a -o ${output} || {
        (>&2 echo "[error] ${output} unable to build")
        exit 1
      }
    ;;

    amd64)
      GOOS=${PLATFORM} \
      GOARCH=amd64 \
      CGO_ENABLED=1 \
      GOFLAGS=-buildmode=pie \
      CC=gcc \
      \
      go build -a -o ${output} || {
        (>&2 echo "[error] ${output} unable to build")
        exit 1
      }
    ;;

    *)
      (>&2 echo "[error] ${output} unsupported target")
      exit 1
    ;;

  esac

  chmod +x ${output}

  echo "[info] ${output} compiled"

  du -hs ${output}
}

lifecycle::go::strip() {
  local output="$1"
  if [ -z ${output} -o ! -f ${output} ] ; then
    return
  fi

  case ${ARCH} in

    armhf)
      arm-linux-gnueabihf-objcopy --strip-unneeded ${output}
    ;;

    arm64)
      aarch64-linux-gnu-objcopy --strip-unneeded ${output}
    ;;

    amd64)
      objcopy --strip-unneeded ${output}
    ;;

    *)
    ;;

  esac

  echo "[info] ${output} stripped"

  du -hs ${output}
}

################################################################################

lifecycle::go::build \
  ${SOURCE} \
  ${OUTPUT_FILE}

lifecycle::go::strip \
  ${OUTPUT_FILE}
